
/////////////////////////////////////////////////////////////////////////  12 Spt [ slot 1 ]   //////////////////////////////////////////////////////////////////////////


Question 1. -------------------------------------------------------------------------------

An automobile company manufactures both a two wheeler (TW) and a four wheeler (FW). A company manager wants to make the production of both types 
of vehicle according to the given data below:
1st data, Total number of vehicle (two-wheeler + four-wheeler)=v
2nd data, Total number of wheels = W

The task is to find how many two-wheelers as well as four-wheelers need to manufacture as per the given data.

Example :
Input :
200  -> Value of V
540   -> Value of W

Solution :-------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int

int main()
{
    ll n,m;
    cin >> n >> m;
    ll s= ((n*4)-m)/2;
    cout << "TW =" << s << " " << "FW=" << n-s ;
           
    return 0;
}
*******************************************************************************************************

Question 2. ----------------------------------------------------------------------------------

Given a string S(input consisting) of ‘*’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘*’ or ‘#’
to make it a valid string. The string is considered valid if the number of ‘*’ and ‘#’ are equal. The ‘*’ and ‘#’ can be at any position in the string.

Note : The output will be a positive or negative integer based on number of ‘*’ and ‘#’ in the input string.

(*>#): positive integer
(#>*): negative integer
(#=*): 0

Example 1:
Input 1:
###***   -> Value of S

Output :
0           → number of * and # are equal 

Solution : ---------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    string s;
    int a=0,b=0;
    getline(cin,s);
    for(auto i:s)
    if(i=='#') a++;
    else if(i=='*') b++;
    cout<<b-a;
}
*************************************************************************************************

Question 3. --------------------------------------------------------------------------------

A chocolate factory is packing chocolates into the packets. The chocolate packets here represent an array arrt of N number of integer values.
The task is to find the empty packets(0) of chocolate and push it to the end of the conveyor belt(array).

For Example:
N=7 and arr = [4,5,0,1.9,0,5,0].
There are 3 empty packets in the given set. These 3 empty packets represented as O should be pushed towards the end of the array
Example 1:
Input:
7  - Value of N
[4,5,0,1,0,0,5] - Element of arr[O] to arr[N-1],While input each element is separated by newline
Output:
4 5 1 9 5 0 0

Solution :----------------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
  int n;
  cin >> n;
  int arr[n];
  int cnt=0;
  for(int i=0;i<n;i++)
  {
      cin >> arr[i];
  }
  for(int i=0;i<n;i++)
  {
      if(arr[i]==0)
      {
          cnt++;
          continue;
      }
      
      cout << arr[i] << " ";
  }
  for(int i=0;i<cnt;i++)
  {
      cout << 0 << " ";
  }
  return 0;
 
}
***********************************************************************************************************************

Question 4.---------------------------------------------------------------------------------------------------------

Joseph is learning digital logic subject which will be for his next semester. He usually tries to solve unit assignment problems before the lecture. 
Today he got one tricky question. The problem statement is “A positive integer has been given as an input. Convert decimal value to binary representation. 
Toggle all bits of it after the most significant bit including the most significant bit. Print the positive integer value after toggling all bits”.

Constraints :
1<=N<=100

Example 1:
Input :
10  -> Integer
Output :
5    -> result- Integer

Solution : --------------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    int n; cin>>n;
    int k=(1<<(int)floor(log2(n))+1)-1;
    cout<<(n^k);
}

*************************************************************************************************************************************

Question 5.------------------------------------------------------------------------------------------------

Jack is always excited about sunday. It is favourite day, when he gets to play all day. And goes to cycling with his friends. 
So every time when the months starts he counts the number of sundays he will get to enjoy. Considering the month can start with any day,
be it Sunday, Monday…. Or so on.
Count the number of Sunday jack will get within n number of days.

Example 1:
Input 
mon-> input String denoting the start of the month.
13  -> input integer denoting the number of days from the start of the month.

Output :
2    -> number of days within 13 days.

Solution :---------------------
#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    string str;
    cin >> str;
    int n; cin>>n;
    int res=1;
    string arr[]={"mon","tue,","wed","thu","fri","sat","sun"};
    for(int i=1;i<=str.length();i++)
    {
        if(arr[i]==str)
        break;
        
       	int rem=6-i;
       	n=n-rem;  	 
       	if(n>0)
        res+=n/7;
    }
    cout << res;
          
}
**********************************************************************************************************************************



////////////////////////////////////////////////////////////////////////  12 Sept [ Slot 2 ]  ////////////////////////////////////////////////////////////////////////////////

Question 1.-----------------------------------------------------------------------------------------------------------------

A parking lot in a mall has RxC number of parking spaces. Each parking psace will either be  empty(0) or full(1).
The status (0/1) of a parking space is represented as the element of the matrix.
The task is to find index of the prpeinzta row(R) in the parking lot that has the most of the parking spaces full(1).

Note :
RxC- Size of the matrix
Elements of the matrix M should be only 0 or 1.

Example 1:
Input :
3   -> Value of R(row)
3	-> value of C(column)
[0 1 0 1 1 0 1 1 1] -> Elements of the array M[R][C] where each element is separated by new line.

Solution  :--------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    int r,c,a,sum=0,m=INT_MIN,in=0;
    cin>>r>>c;
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
            cin>>a;
            sum+=a;
        }
        if(sum>m)
        {
            m=sum;
            in=i+1;
        }
        sum=0;
    }
    cout<<in;
}
****************************************************************************************************************************************

Question 2.------------------------------------------------------------------------------------------------

Given an integer array Arr of size N the task is to find the count of elements whose value is greater than all of its prior elements.
Note : 1st element of the array should be considered in the count of the result.
For example,
Arr[]={7,4,8,2,9}
As 7 is the first element, it will consider in the result.
8 and 9 are also the elements that are greater than all of its previous elements.

Since total of  3 elements is present in the array that meets the condition.
Hence the output = 3.

Solution :------------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
  int n;
  cin >> n;
  int arr[n];
  int cnt=0;
  for(int i=0;i<n;i++)
  {
      cin >> arr[i];
  }
  for(int i=0;i<n;i++)
  {
       if(arr[i]>=arr[0])
       {
           cnt++;
       }
  }
  cout << cnt;
}
*************************************************************************************************************************************************

Question 3:----------------------------------------------------------------------------

Airport security officials have confiscated several item of the passengers at the security check point. All the items have been dumped into a huge box (array).
Each item possesses a certain amount of risk[0,1,2]. Here, the risk severity of the items represent an array[] of N number of integer values. 
The task here is to sort the items based on their levels of risk in the array. The risk values range from 0 to 2.

Example :
Input :
7  -> Value of N
[1,0,2,0,1,0,2]-> Element of arr[0] to arr[N-1], while input each element is separated by new line.

Output :
0 0 0 1 1 2 2  -> Element after sorting based on risk severity 

Solution:--------------------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
  int n;
  cin >> n;
  int arr[n];
  for(int i=0;i<n;i++)
  {
      cin >> arr[i];
  }
  
  sort(arr,arr+n);
  
  for(int i=0;i<n;i++)
  {
       cout << arr[i] << " ";
  }
  cout << endl;
}
***************************************************************************************************************************************


/////////////////////////////////////////////////////////////////////////// 13 Sept [ slot 1 ] ////////////////////////////////////////////////////////////////////////////////

Question 1 :------------------------------------------------------------------------------------------------------------

Question 1:
A party has been organised on cruise. The party is organised for a limited time(T). The number of guests entering (E[i]) and leaving (L[i]) the party at every hour
is represented as elements of the array. The task is to find the maximum number of guests present on the cruise at any given instance within T hours.

Example 1:
Input :
5    -> Value of T
[7,0,5,1,3]  -> E[], Element of E[0] to E[N-1], where input each element is separated by new line 
[1,2,1,3,4]   -> L[], Element of L[0] to L[N-1], while input each element is separate by new line.

Output :
8     -> Maximum number of guests on cruise at an instance.

Solution :------------------------

 #include <bits/stdc++.h>
using namespace std;
 
int main()
{
  int n;
  cin >> n;
  int arr[n];
  int arr1[n];
  for(int i=0;i<n;i++)
  {
      cin >> arr[i];
  }
  for(int i=0;i<n;i++)
  {
      cin >> arr1[i];
  }
  int Max=0,sum=0;
  
  for(int i=0;i<n;i++)
    {
        sum+=arr[i]-arr1[i];
        Max=max(sum,Max);
    }
    cout << Max;
}
*******************************************************************************************************************************************

Question 2 : ------------------------------------------------------------------------------------------------------

At a fun fair, a street vendor is selling different colours of balloons. He sells N number of different colours of balloons (B[]).
The task is to find the colour (odd) of the balloon which is present odd number of times in the bunch of balloons.

Note:
If there is more than one colour which is odd in number, then the first colour in the array which is present odd number of times is displayed.
The colours of the balloons can all be either upper case or lower case in the array. If all the inputs are even in number, display the message “All are even”.

Example 1:
7  -> Value of N
[r,g,b,b,g,y,y]  -> B[] Elements B[0] to B[N-1], where input each element is sepārated by ṉew line.

Output :
r -> [r,g,b,b,g,y,y]  -> “r” colour balloon is present odd number of times in the bunch.

Solution : 
#include<bits/stdc++.h>
using namespace std;
int main()
{

   int n;
   cin >> n;
  
   char arr[n];
   for(int i=0;i<n;i++)
   {
       cin >> arr[i];
   }
  for (int i = 0; i < n; i++) {
         
        int count = 0;
         
        for (int j = 0; j < n; j++)
        {
            if (arr[i] == arr[j])
                count++;
        }
        if (count % 2 != 0)
            cout << arr[i];
  }
  }

*****************************************************************************************************************************************************************

//////////////////////////////////////////////////////////////////  13 Sept [ slot 2 ]  ////////////////////////////////////////////////////////////////////////////////////////

Question 1 :--------------------------------------------------------------------------------------------

A supermarket maintains a pricing format for all its products. A value N is printed on each product. 
When the scanner reads the value N on the item, the product of all the digits in the value N is the price of the item. 
The task here is to design the software such that given the code of any item N the product (multiplication) of all the digits of value should be computed(price).

Example 1:
Input :
5244 -> Value of N

Output :
160 -> Price 

Solution :---------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int
 
int main()
{
 ll n;
 cin >> n;
 ll product=1;
 while(n>0)
 {
    ll rem=n%10;
    product=product*rem;
    n=n/10;
 }
 cout << product;
 return 0;
}
**************************************************************************************************************************************

Question 2 :----------------------------------------------------------------------------------

A high- profile secret agency wants to handle all the messages sent and received in ciphers
. They need to build a program/ software where every mail sent or received in the organization will be encrypted using some secret codes.
One of formats used can be as follows:


Actual
a
b
c
d
e
f
g
h
i
Cipher
f
g
h
i
j
k
l
m
n



Actual
j
k
l
m
n
o
p
q
r
Cipher
o
p
q
r
s
t
u
v
w



Actual
s
t
u
v
w
x
y
z
Cipher
x
y
z
a
b
c
d
e



The task is to encrypt the given string(str1) as per the ciphers given in the format above.

Note : String cannot have any special characters, space, number or any uppercase latter.

Example 1:
Input :
word -> value of str1

Output:
btwi  -> after changing the character with the ciphers

w  o   r   d
|  |   |   |
b  t   w   i

Solution :------------------------     [ PENDING /  USING ASCII VALUE ]----------------------------#########################################################

***************************************************************************************************************************************

////////////////////////////////////////////////////////////////////  14 sept [ slot 1 ] ///////////////////////////////////////////////////////////////////////////////////

Problem 1 :--------------------------------------------------------------------------------------------------

An English school teacher is teaching how to build sentences for kindergarten students. 
She starts by teaching two words in a sentence, then 3 words and so on. The next step is that she asks the students to find which word in the 
sentence they have made has the maximum number of alphabets. The task here is to write program to find the longest word in each input sentence(str).

Note :
The sentence can consist of uppercase, lowercase alphabets, special characters and numbers.

Example 1:
Input :
Knowledge is the greatest gift   -> Value of str

Output :
9

Solution :------------------------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    string s;
    getline(cin,s);
    istringstream ss(s);
    int m=0;
    while(ss)
    {
        string w;
        ss>>w;
        if(w=="") break;
        m=max(m,(int)w.length());
    }
    cout<<m;
}
*********************************************************************************************************************************************************

Question 2.-------------------------------------------------------------------------------------------------------------

An international round table conference will be held in india. Presidents from all over the world representing their respective countries will be attending the conference. 
The task is to find the possible number of ways(P) to make the N members sit around the circular table such that.
The president and prime minister of India will always sit next to each other.

Example 1:
Input :
4   -> Value of N(No. of members)

Output : 
12  -> Possible ways of seating the members

Explanation:
2  members should always be next to each other. 
So, 2 members can be in 2!ways
Rest of the members can be arranged in (4-1)! ways.(1 is subtracted because the previously selected two members will be considered as single members now).
So total possible ways 4 members can be seated around the circular table 2*6= 12.
Hence, output is 12.


Solution :----------------------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
  int n;
  cin >> n;
  int product=1;
   int product1=1;
  for(int i=1;i<=2;i++)
  {
      product=product*i;
  }
  for(int i=1;i<=n-1;i++)
  {
     product1=product1*i; 
  }
  cout << product1*product;
}
*******************************************************************************************************************************

/////////////////////////////////////////////////////////////  14 sept [ slot 2 ]  ////////////////////////////////////////////////////////////////////////////////////////////

problem 1 : ------------------------------------------------------------------------------------

Ab ‘N’ number of customers are waiting at a restaurant that is recently opened. After every ‘M’ minutes , a new customer arrives at the restaurant.
Due to the huge crowd, customers have to wait for their table at the restaurant. Only one customer is allowed at a time. 
The manager at the reception desk asks each customer to wait for ‘X‘ minutes to get their table.
The task is to calculate the duration (in minutes) the last customer arrived needs to wait.

Example 1:
5      Value of N
3      Value of M
10     Value of X

Output :
28

Solution :----------------

#include <bits/stdc++.h>
using namespace std;
 
int main()
{
  int n,m,x;
  cin>>n>>m>>x;
  cout << (x*(n-1) - m*(n-1)) << endl;
}
******************************************************************************************************************************************************

Question :2 -------------------------------------------------------------------------------------------------------

A furnishing company is manufacturing a new collection of curtains. The curtains are of two colors aqua(a) and black (b). 
The curtains color is represented as a string(str) consisting of a’s and b’s of length N. Then, they are packed (substring) into L number of curtains in each box. 
The box with the maximum number of ‘aqua’ (a) color curtains is labeled. The task here is to find the number of ‘aqua’ color curtains in the labeled box.
Note :
If ‘L’ is not a multiple of N, the remaining number of curtains should be considered as a substring too. In simple words, after dividing the curtains in sets of ‘L’,
any curtains left will be another set(refer example 1)

Example 1:
Input :
bbbaaababa -> Value of str
3    -> Value of L

Output:
3   -> Maximum number of a’s

Explanation:
From the input given above.
Dividing the string into sets of 3 characters each 
Set 1: {b,b,b}
Set 2: {a,a,a}
Set 3: {b,a,b}
Set 4: {a} -> leftover characters also as taken as another set
Among all the sets, Set 2 has more number of a’s. The number of a’s in set 2 is 3.
Hence, the output is 3.

Solution :--------------------------------

[ REMAINING ] ##############################################################################################

******************************************************************************************************************************************

/////////////////////////////////////////////////////////////////  15 sept [ slot 1 ]  ////////////////////////////////////////////////////////////////////////////////////////

Question 1 :------------------------------------------------------------------------------

An intelligence agency has received reports about some threats. The reports consist of numbers in a mysterious method. 
There is a number “N” and another number “R”. Those numbers are studied thoroughly and it is concluded that all digits of the number ‘N’ are summed
up and this action is performed ‘R’ number of times. The resultant is also a single digit that is yet to be deciphered. 
The task here is to find the single-digit sum of the given number ‘N’ by repeating the action ‘R’ number of times.
If the value of ‘R’ is 0, print the output as ‘0’.

Example 1:
Input :
99 -> Value of N
3  -> Value of R

Output :
9  -> Possible ways to fill the cistern.

Explanation:
Here, the number N=99
Sum of the digits N: 9+9 = 18
Repeat step 2 ‘R’ times i.e. 3 tims  (9+9)+(9+9)+(9+9) = 18+18+18 =54
Add digits of 54 as we need a single digit 5+4

Hence , the output is 9.

Solution :------------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int
 
int main()
{
 ll n,m;
 cin >> n>>m;
 ll sum=0;
 ll sum1=0;
 while(n>0)
 {
     ll rem = n%10;
     sum=sum+rem;
     n/=10;
 }
 
 sum*=m;
 
 while(sum>0)
 {
     ll rem = sum%10;
     sum1=sum1+rem;
     sum/=10;
 }
 cout << sum1;

}
******************************************************************************************************************************************

Question 2. :--------------------------------------------------------------------------------------------------

There are ‘N’ number of houses in a village. Each house requires a voltage ‘V’ volts of electricity to power up their home appliances.
In this context, the houses are arranged in the form of a matrix (row* columns) where ‘N’ is the order of the matrix.
The amount of voltage supplied to each house is calculated as current(i)*voltage(r) where ‘i’ is the row number and ‘r’ is the column number. 
When the voltage supplied to the house (i*r) matches the value ‘V’, the appliances in the house can work. 
The task here is to find the number of houses whose voltage value(i*r) is the same as ‘V’. If none of the house’s value matches display a message “NO POWER”.

Example 1:
Input :
5      Value of N i.e. rows, columns=5
15    Value of V

Output :
2      number of houses whose i*r value matches 

Solution :------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int
 
int main()
{
 ll n,m;
 cin >> n>>m;
 int arr[n];
 int cnt=0;

 for(int i=1;i<=n;i++)
 {
     for(int j=1;j<=n;j++)
     {
       if(i*j==m)
         {
             cnt++;
         }
     }
 }
 
 if(cnt>0)
 {
     cout << cnt;
 }
 else
 cout << "NO POWER";
}
********************************************************************************************************************************

////////////////////////////////////////////////////////////////  15 sept [ slot 2 ]  ////////////////////////////////////////////////////////////////////////////////////////

Question 1 :-------------------------------------------------------------------------------------------------------------

Particulate matters are the biggest contributors to Delhi pollution. The main reason behind the increase in the concentration of PMs
include vehicle emission by applying Odd Even concept for all types of vehicles. The vehicles with the odd last digit in the registration number will 
be allowed on roads on odd dates and those with even last digit will on even dates.
Given an integer array a[], contains the last digit of the registration number of N vehicles traveling on date D(a positive integer). 
The task is to calculate the total fine collected by the traffic police department from the vehicles violating the rules.
Note : For violating the rule, vehicles would be fined as X Rs.

Example 1:
Input :
4 -> Value of N
{5,2,3,7} -> a[], Elements a[0] to a[N-1], during input each element is separated by a new line
12 -> Value of D, i.e. date 
200 -> Value of x i.e. fine

Output :
600  -> total fine collected 

Explanation:
Date D=12 means , only an even number of vehicles are allowed. 
Find will be collected from 5,3 and 7 with an amount of 200 each.
Hence, the output = 600.

Solution :-------------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int
 
int main()
{
  ll n,b,c;
  cin >>n>>b>>c;
  int odd=0;
  int even=0;
  int arr[n];
  for(int i=0;i<n;i++)
  {
      cin >> arr[i];
  }
  for(int i=0;i<n;i++)
  {
      if(arr[i]%2==0)
      {
          even++;
      }
      else
      {
          odd++;
      }
  }
  if(b%2==0)
  {
      c*=odd;
  }
  else
  {
      c*=even;
  }
  cout << c;
}

*******************************************************************************************************************************************

Question 2. :----------------------------------------------------------------------------------------------------

In a puzzle game, there are five blocks. Each block is assigned with some repeating numbers 

The number 1 starts from block-1,2 on block-2,3 on block -3, 4 on block-4 and 5 on block-5. Again 6 on block-4 and so on.
Here we observe a pattern, the numbers 10,8 and 2 are on block-2 , 3,7 and 11 on the block 3 and so on. 

Given a positive integer N. The task is to find the correct block to which the number assigned.

Example 1:
Input :
3   ---> Value of N

Output :
3    -> Block number

Solution :-----------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int
 int main()
{
 ll n;
 cin >> n;
 ll rem= n%8;
 if(rem==0)
 {
     cout << 2;
 }
 else if(rem>5)
 {
     cout << 10-n;
 }
 else
 {
     cout << n;
 }
 return 0;
}

****************************************************************************************************************************************************



















