find nth tearm of series 
0,0,7,6,14,12,21,18, 28

example : input- 15   output- 42
          input- 14   output- 36
          
code - ------------------------------   

#include <bits/stdc++.h>
using namespace std;
#define ll long long int 

int main() {
	
	int n;
  int res = 0;
  cin >> n;
  if(n%2==0){
  	for(int i=0 ;i < n/2-1;i++){
		res += 6;
	}
	cout << res ;
  } else {
  	for(int i=0 ;i < n/2-1;i++){
		res += 7;
	}
	cout << res ;
  }
  return 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

check given year is leap or not 
example : input- 1900   output- NO
          input- 2000   output- YES
	  
solution - ------------------------------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int 

int main() {
	
    bool res=true;
    ll n;
    cin >> n;
    if ((n % 4 == 0 && n % 100 != 0) || n % 400 == 0)
    {
       res=true;
    }
    else
    {
        res=false;
    }
    
    if(res)
    {
        cout << "YES";
    }
    else
    cout << "NO";
    
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Find the first non-repeating element in a given array of integers.

Examples:

Input : -1 2 -1 3 2
Output : 3
Explanation : The first number that does not 
repeat is : 3
	
solution--------------------------------------------------- 

#include <bits/stdc++.h>
using namespace std;
#define ll long long int 

int firstNonRepeating(int arr[], int n){	
   
       for (int i = 0; i < n; i++) {
        int j;
        for (j = 0; j < n; j++)
            if (i != j && arr[i] == arr[j])
                break;
        if (j == n)
            return arr[i];
    }
    return -1;
}
int main()
{
        int n ;
        cin >> n;
        int arr[n];
    for(int i=0;i<n;i++)
    {
        cin >> arr[i];
    }
        cout << firstNonRepeating(arr, n);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   
   Given an array of integers arr[] of size N and an integer, the task is to rotate the array elements to the left by d positions.

Examples:  
Input: 
arr[] = {1, 2, 3, 4, 5, 6, 7}, d = 2
Output: 3 4 5 6 7 1 2

solution-----------------------------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int 

void Rotate(int arr[], int d, int n)
{
    int temp[n];
    int k = 0;

    for (int i = d; i < n; i++) {
        temp[k] = arr[i];
        k++;
    }
 
    for (int i = 0; i < d; i++) {
        temp[k] = arr[i];
        k++;
    }
 
    for (int i = 0; i < n; i++) {
        arr[i] = temp[i];
    }
}

int main()
{
        int N ;
        cin >> N;
        ll d;
        cin >> d;
        int arr[N];
    for(int i=0;i<N;i++)
    {
        cin >> arr[i];
    }
          Rotate(arr, d, N);
          
     for (int i = 0; i < N; i++) {
        cout << arr[i] << " ";
    }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Given a string, write a c++ function to check if it is palindrome or not. 

A string is said to be palindrome if reverse of the string is same as string. For example, “abba” is palindrome, but “abbc” is not palindrome.

solution------------------------------------------

#include <bits/stdc++.h>
using namespace std;
#define ll long long int 

int main()
{
    bool res=true;
   string s;
   cin >> s;
   ll n=s.size();
   int l=0, h=n-1;
   while(h>1)
   {
       if (s[l++] != s[h--])
       {
           res=false;
       }
       else
       res=true;
   }
   if(res)
   {
       cout << "Palindrome";
   }
   else
   cout << "NOT Pelindrome";
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
